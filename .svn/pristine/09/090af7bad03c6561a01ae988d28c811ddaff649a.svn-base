<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>treegrid</title>
<link rel="stylesheet" type="text/css" href="css/main.css" />
<link rel="stylesheet" type="text/css" href="css/prettify.css">
<script type="text/javascript" src="js/prettify.js"></script>
</head>
<body style="text-align:left">
<div style="padding:10px">

<h3>TreeGrid</h3>
<p>Extend from $.fn.datagrid.defaults. Override defaults with $.fn.treegrid.defaults.</p>
<p>
The treegrid is used to show hierarchical data in grid.
It is based on datagrid and combines treeview and editable grid.
The treegrid allows you to create customizable, async expandable rows and show hierarchical data in muliple columns.
</p>
<img src="../tutorial/tree/images/treegrid2.png">

<h4>Dependencies</h4>
<ul>
	<li>datagrid</li>
</ul>

<h4>Usage Example</h4>
<p>
Create treegrid in HTML markup.
For the most part, the treegrid follows the same structure and formatting as datagrid.
</p>
<pre class="prettyprint linenums prettyprinted" name="code" style=""><ol class="linenums"><li class="L0"><span class="tag">&lt;table</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"tt"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"easyui-treegrid"</span><span class="pln"> </span><span class="atn">style</span><span class="pun">=</span><span class="atv">"</span><span class="pln">width</span><span class="pun">:</span><span class="lit">600px</span><span class="pun">;</span><span class="pln">height</span><span class="pun">:</span><span class="lit">400px</span><span class="atv">"</span></li><li class="L1"><span class="pln">        </span><span class="atn">data-options</span><span class="pun">=</span><span class="atv">"url:'get_data.php',idField:'id',treeField:'name'"</span><span class="tag">&gt;</span></li><li class="L2"><span class="pln">    </span><span class="tag">&lt;thead&gt;</span></li><li class="L3"><span class="pln">        </span><span class="tag">&lt;tr&gt;</span></li><li class="L4"><span class="pln">            </span><span class="tag">&lt;th</span><span class="pln"> </span><span class="atn">data-options</span><span class="pun">=</span><span class="atv">"field:'name',width:180"</span><span class="tag">&gt;</span><span class="pln">Task Name</span><span class="tag">&lt;/th&gt;</span></li><li class="L5"><span class="pln">            </span><span class="tag">&lt;th</span><span class="pln"> </span><span class="atn">data-options</span><span class="pun">=</span><span class="atv">"field:'persons',width:60,align:'right'"</span><span class="tag">&gt;</span><span class="pln">Persons</span><span class="tag">&lt;/th&gt;</span></li><li class="L6"><span class="pln">            </span><span class="tag">&lt;th</span><span class="pln"> </span><span class="atn">data-options</span><span class="pun">=</span><span class="atv">"field:'begin',width:80"</span><span class="tag">&gt;</span><span class="pln">Begin Date</span><span class="tag">&lt;/th&gt;</span></li><li class="L7"><span class="pln">            </span><span class="tag">&lt;th</span><span class="pln"> </span><span class="atn">data-options</span><span class="pun">=</span><span class="atv">"field:'end',width:80"</span><span class="tag">&gt;</span><span class="pln">End Date</span><span class="tag">&lt;/th&gt;</span></li><li class="L8"><span class="pln">        </span><span class="tag">&lt;/tr&gt;</span></li><li class="L9"><span class="pln">    </span><span class="tag">&lt;/thead&gt;</span></li><li class="L0"><span class="tag">&lt;/table&gt;</span></li></ol></pre>
<p>Create treegrid using javascript.</p>
<pre class="prettyprint linenums prettyprinted" name="code" style=""><ol class="linenums"><li class="L0"><span class="tag">&lt;table</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"tt"</span><span class="pln"> </span><span class="atn">style</span><span class="pun">=</span><span class="atv">"</span><span class="pln">width</span><span class="pun">:</span><span class="lit">600px</span><span class="pun">;</span><span class="pln">height</span><span class="pun">:</span><span class="lit">400px</span><span class="atv">"</span><span class="tag">&gt;&lt;/table&gt;</span></li></ol></pre>
<pre class="prettyprint linenums prettyprinted" name="code" style=""><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#tt'</span><span class="pun">).</span><span class="pln">treegrid</span><span class="pun">({</span></li><li class="L1"><span class="pln">    url</span><span class="pun">:</span><span class="str">'get_data.php'</span><span class="pun">,</span></li><li class="L2"><span class="pln">    idField</span><span class="pun">:</span><span class="str">'id'</span><span class="pun">,</span></li><li class="L3"><span class="pln">    treeField</span><span class="pun">:</span><span class="str">'name'</span><span class="pun">,</span></li><li class="L4"><span class="pln">    columns</span><span class="pun">:[[</span></li><li class="L5"><span class="pln">        </span><span class="pun">{</span><span class="pln">title</span><span class="pun">:</span><span class="str">'Task Name'</span><span class="pun">,</span><span class="pln">field</span><span class="pun">:</span><span class="str">'name'</span><span class="pun">,</span><span class="pln">width</span><span class="pun">:</span><span class="lit">180</span><span class="pun">},</span></li><li class="L6"><span class="pln">        </span><span class="pun">{</span><span class="pln">field</span><span class="pun">:</span><span class="str">'persons'</span><span class="pun">,</span><span class="pln">title</span><span class="pun">:</span><span class="str">'Persons'</span><span class="pun">,</span><span class="pln">width</span><span class="pun">:</span><span class="lit">60</span><span class="pun">,</span><span class="pln">align</span><span class="pun">:</span><span class="str">'right'</span><span class="pun">},</span></li><li class="L7"><span class="pln">        </span><span class="pun">{</span><span class="pln">field</span><span class="pun">:</span><span class="str">'begin'</span><span class="pun">,</span><span class="pln">title</span><span class="pun">:</span><span class="str">'Begin Date'</span><span class="pun">,</span><span class="pln">width</span><span class="pun">:</span><span class="lit">80</span><span class="pun">},</span></li><li class="L8"><span class="pln">        </span><span class="pun">{</span><span class="pln">field</span><span class="pun">:</span><span class="str">'end'</span><span class="pun">,</span><span class="pln">title</span><span class="pun">:</span><span class="str">'End Date'</span><span class="pun">,</span><span class="pln">width</span><span class="pun">:</span><span class="lit">80</span><span class="pun">}</span></li><li class="L9"><span class="pln">    </span><span class="pun">]]</span></li><li class="L0"><span class="pun">});</span></li></ol></pre>

<h4>Properties</h4>
<p>The properties extend from datagrid, below is the added properties for treegrid.</p>
<table class="doc-table">
<tbody><tr>
<th><strong>Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Description</strong></th>
<th><strong>Default</strong></th>
</tr>
<tr>
<td>idField</td>
<td>string</td>
<td>Defines the key field to identify a tree node. required.</td>
<td>null</td>
</tr>
<tr>
<td>treeField</td>
<td>string</td>
<td>Defines the tree node field. required.</td>
<td>null</td>
</tr>
<tr>
<td>animate</td>
<td>boolean</td>
<td>Defines if to show animation effect when node expand or collapse.</td>
<td>false</td>
</tr>
<tr>
<td>loader</td>
<td>function(param,success,error)</td>
<td>
Defines how to load data from remote server. Return false can abort this action.
This function takes following parameters:<br>
param: the parameter object to pass to remote server.<br>
success(data): the callback function that will be called when retrieve data successfully.<br>
error(): the callback function that will be called when failed to retrieve data.
</td>
<td>json loader</td>
</tr>
<tr>
<td>loadFilter</td>
<td>function(data,parentId)</td>
<td>
Return the filtered data to display.
</td>
<td></td>
</tr>

</tbody></table>

<br>
<h4>Events</h4>
<p>The events extend from datagrid, below is the added events for treegrid.</p>
<table class="doc-table">
<tbody><tr>
<th><strong>Name</strong></th>
<th><strong>Parameters</strong></th>

<th><strong>Description</strong></th>
</tr>
<tr>
<td>onClickRow</td>
<td>row</td>
<td>Fires when user click a node.</td>
</tr>
<tr>
<td>onDblClickRow</td>
<td>row</td>
<td>Fires when user dblclick a node.</td>

</tr>
<tr>
<td>onClickCell</td>
<td>field,row</td>
<td>Fires when user click a cell.</td>
</tr>
<tr>
<td>onDblClickCell</td>
<td>field,row</td>
<td>Fires when user dblclick a cell.</td>
</tr>
<tr>
<td>onBeforeLoad</td>
<td>row, param</td>
<td>Fires before a request is made to load data, return false to cancel this load action.</td>
</tr>
<tr>
<td>onLoadSuccess</td>
<td>row, data</td>
<td>Fires when data loaded successfully.</td>
</tr>

<tr>
<td>onLoadError</td>
<td>arguments</td>
<td>Fires when data loaded fail, the arguments parameter is same as the 'error' function of jQuery.ajax.</td>
</tr>
<tr>
<td>onBeforeExpand</td>
<td>row</td>
<td>Fires before node is expanded, return false to cancel this expand action.</td>
</tr>
<tr>

<td>onExpand</td>
<td>row</td>
<td>Fires when node is expanded.</td>
</tr>
<tr>
<td>onBeforeCollapse</td>
<td>row</td>
<td>Fires before node is collapsed, return false to cancel this collapse action.</td>
</tr>
<tr>
<td>onCollapse</td>

<td>row</td>
<td>Fires when node is collapsed.</td>
</tr>
<tr>
<td>onContextMenu</td>
<td>e, row</td>
<td>Fires when node is right clicked.</td>
</tr>
<tr>
<td>onBeforeEdit</td>
<td>row</td>

<td>Fires when user start editing a node.</td>
</tr>
<tr>
<td>onAfterEdit</td>
<td>row,changes</td>
<td>Fires when user finish editing.</td>
</tr>
<tr>
<td>onCancelEdit</td>
<td>row</td>
<td>Fires when user cancel editing a node.</td>

</tr>
</tbody></table>

<br>
<h4>Methods</h4>
<p>
Many methods take a parameter named 'id', this parameter indicate the tree node value.
</p>
<table class="doc-table">
<tbody><tr>
<th><strong>Name</strong></th>
<th><strong>Parameter</strong></th>
<th><strong>Description</strong></th>

</tr>
<tr>
<td>options</td>
<td>none</td>
<td>Return the options of treegrid.</td>
</tr>
<tr>
<td>resize</td>
<td>options</td>
<td>Set treegrid size, the options contains two properties:<br>
width: the new width of treegrid.<br>

height: the new height of treegrid.</td>
</tr>
<tr>
<td>fixRowHeight</td>
<td>id</td>
<td>fix the specified row height.</td>
</tr>
<tr>
<td>loadData</td>
<td>data</td>
<td>Load the treegrid data.</td>

</tr>
<tr>
<td>load</td>
<td>param</td>
<td>
Load and show the first page. This method is available since version 1.3.4.
<p>Code example:</p>
<pre>// load and send some request parameters
$('#tg').treegrid('load', {
	q: 'abc',
	name: 'name1'
});
</pre>
</td>
</tr>
<tr>
<td>reload</td>
<td>id</td>
<td>
Reload treegrid data.
If the 'id' parameter is passed, reload the specified tree row, otherwise reload all tree rows.
<p>Code example:</p>
<pre>$('#tt').treegrid('reload', 2);	// reload the row which value is equals to 2
$('#tt').treegrid('reload');	// reload the all rows
$('#tt').treegrid('reload', {id:2, q:'abc'});  // reload the specified row with 'q' parameter passing to server
</pre>
</td>
</tr>
<tr>
<td>reloadFooter</td>
<td>footer</td>
<td>Reload footer data.</td>
</tr>

<tr>
<td>getData</td>
<td>none</td>
<td>Get the loaded data.</td>
</tr>
<tr>
<td>getFooterRows</td>
<td>none</td>
<td>Get the footer data.</td>
</tr>
<tr>

<td>getRoot</td>
<td>none</td>
<td>Get the root node, return node object</td>
</tr>
<tr>
<td>getRoots</td>
<td>none</td>
<td>Get the root nodes, return node array.</td>
</tr>
<tr>
<td>getParent</td>

<td>id</td>
<td>Get the parent node.</td>
</tr>
<tr>
<td>getChildren</td>
<td>id</td>
<td>Get the children nodes.</td>
</tr>
<tr>
<td>getSelected</td>
<td>none</td>

<td>Get the selected node and return it, if no node selected return null.</td>
</tr>
<tr>
<td>getSelections</td>
<td>none</td>
<td>Get all selected nodes.</td>
</tr>
<tr>
<td>getLevel</td>
<td>id</td>
<td>Get the specified node level.</td>

</tr>
<tr>
<td>find</td>
<td>id</td>
<td>Find the specifed node and return the node data.</td>
</tr>
<tr>
<td>select</td>
<td>id</td>
<td>Select a node.</td>
</tr>

<tr>
<td>unselect</td>
<td>id</td>
<td>Unselect a node.</td>
</tr>
<tr>
<td>selectAll</td>
<td>none</td>
<td>Select all nodes.</td>
</tr>
<tr>

<td>unselectAll</td>
<td>none</td>
<td>Unselect all nodes.</td>
</tr>
<tr>
<td>collapse</td>
<td>id</td>
<td>Collapse a node.</td>
</tr>
<tr>
<td>expand</td>

<td>id</td>
<td>Expand a node.</td>
</tr>
<tr>
<td>collapseAll</td>
<td>id</td>
<td>Collapse all nodes.</td>
</tr>
<tr>
<td>expandAll</td>
<td>id</td>

<td>Expand all nodes.</td>
</tr>
<tr>
<td>expandTo</td>
<td>id</td>
<td>Expand from root to specified node.</td>
</tr>
<tr>
<td>toggle</td>
<td>id</td>
<td>Toggles expanded/collapsed state of the node.</td>

</tr>
<tr>
<td>append</td>
<td>param</td>
<td>
Append nodes to a parent node. The 'param' parameter contains following properties:<br>
parent: the parent node id, if not assigned, append as root nodes.<br>
data: array, the nodes data.<br>
Code example:
<pre>// append some nodes to the selected row
var node = $('#tt').treegrid('getSelected');
$('#tt').treegrid('append',{
	parent: node.id,  // the node has a 'id' value that defined through 'idField' property
	data: [{
		id: '073',
		name: 'name73'
	}]
});
</pre>
</td>
</tr>
<tr>
<td>insert</td>
<td>param</td>
<td>
Insert a new node to specified node. The 'param' parameter contains following properties:<br>
before: the id value of node to insert before.<br>
after: the id value of node to insert after.<br>
data: the new node data.
<p>Code example:</p>
<pre>// insert a new node before the selected node
var node = $('#tt').treegrid('getSelected');
if (node){
	$('#tt').treegrid('insert', {
		before: node.id,
		data: {
			id: 38,
			name: 'name38'
		}
	});
}
</pre>
This method is available since version 1.3.1.
</td>
</tr>
<tr>
<td>remove</td>
<td>id</td>
<td>Remove a node and it's children nodes.</td>
</tr>
<tr>
<td>pop</td>
<td>id</td>
<td>
Pop and return a node data including its children after remove that node.
This method is available since version 1.3.1.
</td>
</tr>
<tr>
<td>refresh</td>
<td>id</td>
<td>Refresh the specified node.</td>
</tr>
<tr>
<td>update</td>
<td>param</td>
<td>
Update the specified node. The param contains following properties:<br>
id: the node id that indicate the node to be updated.<br>
row: the new row data.
<p>Code example:</p>
<pre>$('#tt').treegrid('update',{
	id: 2,
	row: {
		name: 'new name',
		iconCls: 'icon-save'
	}
});
</pre>
This method is available since version 1.3.1.
</td>
</tr>
<tr>
<td>beginEdit</td>
<td>id</td>
<td>Begin editing a node.</td>

</tr>
<tr>
<td>endEdit</td>
<td>id</td>
<td>End editing a node.</td>
</tr>
<tr>
<td>cancelEdit</td>
<td>id</td>
<td>Cancel editing a node.</td>
</tr>
<tr>
<td>getEditors</td>
<td>id</td>
<td>Get the specified row editors. Each editor has the following properties:<br>
actions: the actions that the editor can do.<br>
target: the target editor jQuery object.<br>

field: the field name.<br>
type: the editor type.</td>
</tr>
<tr>
<td>getEditor</td>
<td>param</td>
<td>Get the specified editor, the param contains two properties:<br>
id: the row node id.<br>
field: the field name.</td>
</tr>

</tbody></table>

</div>
</body>
</html>