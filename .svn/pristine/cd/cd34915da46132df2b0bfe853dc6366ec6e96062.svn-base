package com.zkzy.njzhpt.controller;

import com.ggy.common.utils.ParamUtil;
import com.ggy.common.utils.SqlUtil;
import com.ggy.common.utils.UserInfo;
import com.jfinal.aop.Duang;
import com.jfinal.core.Controller;
import com.jfinal.kit.LogKit;
import com.jfinal.kit.PathKit;
import com.jfinal.kit.Ret;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.upload.UploadFile;
import com.zkzy.njzhpt.bo.SecurityEducationBo;
import org.apache.commons.io.FileUtils;

import java.io.File;
import java.util.HashMap;

/**
 * Created by Administrator
 * Date: 2017/5/4
 * Time: 14:07
 * Description:安全教育相关的controller
 */
public class SecurityEducationController extends Controller {
	public void index() {
		Ret ret = null;
		try {
			String method = getAttr("_url_");
			if (StrKit.notBlank(method)) {
				ret = (Ret) SecurityEducationBo.class.getMethod(method, HashMap.class)
						.invoke(Duang.duang(SecurityEducationBo.class),
								ParamUtil.getParamMap(this.getParaMap()));
				if (ret.getData().containsKey("list")) {
					renderJson(ret.getData().get("list"));
				} else {
					renderJson(ret.getData());
				}
			} else {
				renderText("FrameworkController");
			}
		} catch (Exception e) {
			e.printStackTrace();
			String message = e.getCause().getMessage();
			LogKit.error(message);
			ret = Ret.create("ret", false).put("message", message);
			renderJson(ret.getData());
		}

	}

	public void toHTML() {
		String url = (String) getAttr("_url_");
		render(url);
	}


	/**
	 * * author:dx
	 * date:2017/5/5
	 * time:13:42
	 * description:上传文件
	 */
	public void uploadFile() {
		UploadFile uploadFile = this.getFile();
		File file = uploadFile.getFile();
		String filename = file.getName();
		File f = uploadFile.getFile();
		String newFileName = SqlUtil.uuid() + "." + filename.substring(filename.lastIndexOf(".") + 1);
		try {
			if (!new File(f.getAbsolutePath().substring(0, f.getAbsolutePath().lastIndexOf("\\") + 1) + "\\safeEducation\\").exists()) {
				FileUtils.forceMkdir(new File(f.getAbsolutePath().substring(0, f.getAbsolutePath().lastIndexOf("\\") + 1) + "\\safeEducation\\"));
			}
			if (f.renameTo(new File(f.getAbsolutePath().substring(0, f.getAbsolutePath().lastIndexOf("\\") + 1) + "\\safeEducation\\" + newFileName))) {
				System.out.println("true");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		renderJson(newFileName);
	}

	/**
	 * * author:dx
	 * date:2017/5/6
	 * time:2:32
	 * description:文件下载
	 */
	public void downloadFile() {
		HashMap<String, Object> queryparam = ParamUtil.getParamMap(this.getParaMap());
		if (!queryparam.containsKey("filename")) {
			renderText("参数不全");
			return;
		}
		Record record = Db.find("select * from njpt_knowledgeStructFile where uuidName=?", queryparam.get("filename")).get(0);
		Integer cliclNums = record.getInt("clickNums") + 1;
		record.set("clickNums", cliclNums);

		if (Db.update("njpt_knowledgeStructFile", record)) {
			if(new File(PathKit.getWebRootPath() + "\\upload\\safeEducation\\" + queryparam.get("filename")).exists()) {
				renderFile(new File(PathKit.getWebRootPath() + "\\upload\\safeEducation\\" + queryparam.get("filename")));
			}else{
				renderText("文件不存在！");
			}
		} else {
			renderJson("{'ret':false}");
		}
	}

	/**
	 * * author:dx
	 * date:2017/5/5
	 * time:17:14
	 * description:查找文件
	 *
	 * @param param
	 * @throws Exception
	 */
	public void findFile() throws Exception {
		HashMap<String, Object> queryparam = ParamUtil.getParamMap(this.getParaMap());
		renderJson(Duang.duang(SecurityEducationBo.class).findFile(queryparam));
	}

	/**
	 * * author:dx
	 * date:2017/5/6
	 * time:12:38
	 * description:加载视频
	 * @throws Exception
	 */
	public void loadvideo() throws Exception {
		HashMap<String, Object> queryparam = ParamUtil.getParamMap(this.getParaMap());
		if(new File(PathKit.getWebRootPath() + "\\upload\\safeEducation\\" + queryparam.get("url")).exists())
		{
			setAttr("url",queryparam.get("url"));
			render("loadvideo.html");
		}else{
			renderText("文件不存在");
		}
	}

	/**
	 * * author:dx
	 * date:2017/5/6
	 * time:12:39
	 * description:判断文件是否存在
	 * @throws Exception
	 */
	public void fileIsExist() throws Exception {
		HashMap<String, Object> queryparam = ParamUtil.getParamMap(this.getParaMap());
		if(new File(PathKit.getWebRootPath() + "\\upload\\safeEducation\\" + queryparam.get("url")).exists())
		{
			renderText("true");
		}else{
			renderText("false");		}
	}

	/**
	 * * author:dx
	 * date:2017/5/6
	 * time:13:20
	 * description:保存文件
	 * @throws Exception
	 */
	public void saveFileInfo() throws Exception {
		HashMap<String, Object> queryparam = ParamUtil.getParamMap(this.getParaMap());
		UserInfo user=(UserInfo)getAttr("userinfo");
		queryparam.put("uploadAuther",user.getUser().get("id"));
		renderJson(Duang.duang(SecurityEducationBo.class).saveFileInfo(queryparam).getData());
	}
	/**
	 * * author:dx
	 * date:2017/5/6
	 * time:13:58
	 * description:判断是否可以删除
	 */
	public void candelete(){

		HashMap<String, Object> queryparam = ParamUtil.getParamMap(this.getParaMap());
		//查找文件记录
		Record record = Db.findById("njpt_knowledgeStructFile", queryparam.get("id"));
		if(!((UserInfo)getAttr("userinfo")).getUser().get("id").equals(record.get("uploadAuther")))
		{
			renderJson("{\"ret\":false}");
		}else{
			renderJson("{\"ret\":true}");
		}
	}
}
