package com.zkzy.njzhpt.bo;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import com.jfinal.aop.Before;
import com.jfinal.kit.Ret;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.zkzy.njzhpt.dao.AppDao;
import com.zkzy.njzhpt.dao.JibenxinxiDao;
import com.zkzy.njzhpt.interceptor.AutoPageInterceptor;

public class AppBo {
	/**
	 * 
	 * @author yzz
	 * @throws Exception 
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> getQyInfo(HashMap<String, Object> param) throws Exception {
		Page<Record>  page=AppDao.getQyInfo(param);
		for(Record record:page.getList()){
			HashMap<String, Object> queryparam=new HashMap<String, Object>();
			queryparam.put("rows", 10000);
			queryparam.put("page", 1);
			queryparam.put("jyywlxbh", record.getStr("jyywlxbh"));
			Page<Record> page1=JibenxinxiDao.findQiyexinxi(queryparam);
			DecimalFormat b1 = new DecimalFormat("###0.00");
			double sjkc=0;
			for(Record record1:page1.getList()){
				Record re=Db.findFirst("select SUM(dmStock) as dmStock from kc_CurrentStock  where qyzzjgdm=?",record1.getStr("qyzzjgdm"));
				if(re.get("dmStock")!=null){
					sjkc+=re.getBigDecimal("dmStock").doubleValue();
				}
			}
			record.set("dmStock",b1.format(sjkc));
		}
		
		return page;
	}
	
	/**
	 * 获取可视化库点
	 * @param param
	 * @return
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> getKdKsh(HashMap<String, Object> param) {
		Page<Record>  userPageRecord=AppDao.getKdKsh(param);
		//========================================================
				//获取当前分期
				Date dt = new Date();
				String starttime;
				String endtime;
				String jidu;
			    SimpleDateFormat matter1=new SimpleDateFormat("yyyy-MM-dd");
			    String today = matter1.format(dt);
			    String sql = "select starttime , endtime, jidu "
			    		+ "from njpt_fenqishangbao "
			    		+ "where convert(date,starttime) <= ? and convert(date,endtime) >= ?";
			    Record recordt = Db.findFirst(sql, today,today);
			    if(recordt == null){
			    	sql = "select starttime , endtime,jidu "
				    		+ "from njpt_fenqishangbao "
				    		+ "where convert(date,endtime) <= ? order by endtime desc ";
			    	recordt = Db.findFirst(sql,today);
			    	if(recordt == null){
			    		starttime = "2100-01-01";
				    	endtime = "2000-01-01";	
				    	jidu = "夏季";
			    	}else{
			    		starttime = recordt.getStr("starttime");
					    endtime = recordt.getStr("endtime");
					    jidu = recordt.getStr("jidu");
			    	}
			    }else{
			    	starttime = recordt.getStr("starttime");
				    endtime = recordt.getStr("endtime");
				    jidu = recordt.getStr("jidu");
			    }
			    
			    if(StrKit.isBlank(starttime) || starttime.length() != 10){
			    	
			    }
		int index=1;
	    int index1=0;
		for(Record userRecord:userPageRecord.getList()){
			Record status= Db.use("grainplat").findFirst("select * from plan where entcode=?and orgcode=?",userRecord.getStr("qyzzjgdm"),userRecord.getStr("kdbm"));
			if(status!=null){
				userRecord.set("status", 1);
			}else{
				userRecord.set("status", 0);
			}
			
			int page=userPageRecord.getPageNumber();
			int rows=userPageRecord.getPageSize();
			index1=(page-1)*rows+index;
			userRecord.set("xuhao",index1);
			index++;
			String qiye = userRecord.getStr("qyzzjgdm");
			String kdbm = userRecord.getStr("kdbm");
			HashMap<String, Object> param1 = new HashMap<>();
			param1.put("qyzzjgdm", qiye);
			param1.put("kdbm", kdbm);
			param1.put("page", 1);
			param1.put("rows", 1);
			Record pzkc = new Record();
			if(JibenxinxiDao.queryCfZkc(param1).getTotalRow() == 0){
				pzkc.set("dmStock", 0);
			}else{
				pzkc = JibenxinxiDao.queryCfZkc(param1).getList().get(0);
			}
			
			Record kdcr = new Record();
			if(JibenxinxiDao.queryCfZcr(param1).getTotalPage() == 0){
				kdcr.set("dmStock", 0);
			}else{
				kdcr = JibenxinxiDao.queryCfZcr(param1).getList().get(0);
			}
			
			userRecord.setColumns(pzkc);
			userRecord.setColumns(kdcr);
			
			HashMap<String, Object> param2 = new HashMap<>();
			param2.put("qyzzjgdm", qiye);
			param2.put("kdbm", kdbm);
			param2.put("starttime", starttime);
			param2.put("endtime", endtime);
			param2.put("page", 1);
			param2.put("rows", 1);
			if("夏季".equals(jidu)){
				param2.put("djpz", "113");
			}else{
				param2.put("djpz", "111");
			}
			Record pzrk = new Record();
			if(JibenxinxiDao.findzongrk(param2).getTotalPage() == 0){
				pzrk.set("sumNW", 0);
			}else{
				
				pzrk = JibenxinxiDao.findzongrk(param2).getList().get(0);
			}
			userRecord.setColumns(pzrk);
		}
		return userPageRecord;
	}
	
	/**
	 * 获取办公人员通讯录
	 * @param param
	 * @return
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> getTxBg(HashMap<String, Object> param) {
		Page<Record>  bglist=JibenxinxiDao.getTxBg(param);
		return bglist;
	}
	
	/**
	 * 获取办公人员明细
	 * @param param
	 * @return
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> getBgRy(HashMap<String, Object> param) {
		Page<Record>  bglist=JibenxinxiDao.getBgRy(param);
		return bglist;
	}
	
	/**
	 * 获取应急通讯
	 * @param param
	 * @return
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> getTxyj(HashMap<String, Object> param) {
		Page<Record>  bglist=JibenxinxiDao.getTxyj(param);
		return bglist;
	}

	/**
	 * 获取应急人员明细
	 * @param param
	 * @return
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> getyjRy(HashMap<String, Object> param) {
		Page<Record>  bglist=JibenxinxiDao.getyjRy(param);
		return bglist;
	}
	
	/**
	 * 地区表 --- 查删增改
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@Before(AutoPageInterceptor.class)
	public  Page<Record> findDiqu (HashMap<String, Object> param) throws Exception {	
		 Page<Record>  diqulist=JibenxinxiDao.findDiqu(param);
		return diqulist;
	}

	/**
	 * 获取应急事件
	 * @throws Exception 
	 */
	@Before(AutoPageInterceptor.class)
	public  Page<Record> queryyjsj(HashMap<String, Object> param) throws Exception {
		// TODO Auto-generated method stub
		return JibenxinxiDao.queryyjsj(param);
	}

	/**
	 * 查找灵山出入库信息
	 * @param param
	 * @return
	 * @throws Exception 
	 */
	@Before(AutoPageInterceptor.class)
	public Ret searchlscrk(HashMap<String, Object> map) throws Exception {
		// TODO Auto-generated method stub
		Page<Record> userPageRecord = AppDao.searchlscrk(map);
		List<Record> pagelist = userPageRecord.getList();
		int total = userPageRecord.getTotalRow();
		
		Ret ret = new Ret();
		ret.put("total",total);
		ret.put("rows",pagelist);
		return ret;
	}

	/**
	 * 查找灵山仓房信息
	 * @param param
	 * @return
	 * @throws Exception 
	 */
	@Before(AutoPageInterceptor.class)
	public Ret searchlscf(HashMap<String, Object> map) throws Exception {
		// TODO Auto-generated method stub
		Page<Record> userPageRecord = AppDao.searchlscf(map);
		List<Record> lsr = userPageRecord.getList();
		Record re = new Record();
		re.set("cfbm", "");
		re.set("cfmc", "全部");
		lsr.add(0, re);
		
		Ret ret = Ret.create("list", lsr);
		return ret;
	}

	@Before(AutoPageInterceptor.class)
	public Page<Record> findQiyexinxi(HashMap<String, Object> queryparam) throws Exception {
		
		return AppDao.findQiyexinxi(queryparam);
	}
	
	
	@Before(AutoPageInterceptor.class)
	public Page<Record> findQyba(HashMap<String, Object> param) throws Exception {
		Page<Record> page=	AppDao.findQyba(param);
		int index=1;
		for(Record record:page.getList()){
			//获取流程名称
			Record re=Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? order by jiedian desc",record.getStr("liuchengid"));
			 record.set("liuchengname", re.get("name"));
			 record.set("jd",re.get("jiedian"));
			 
			if(record.getStr("shenpiren")!=null){
				Record liucheng=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? and shenpiren=?",record.getStr("liuchengid"),record.getStr("shenpiren"));
				if(liucheng!=null){
					//record.set("jiedian", liucheng.getInt("jiedian"));
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liucheng.getStr("shenpibumen"));
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
					}
				}
			}else{
				Record liu=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=?",record.getStr("liuchengid"));
				if(liu!=null){
					
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liu.getStr("shenpibumen"));
					
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
					}
				}
				
			}
			
			
			record.set("xuhao", index);
			index++;
			/*if(record.getStr("shenpiren")!=null){
				Record liucheng=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? and shenpiren=?",record.getStr("liuchengid"),record.getStr("shenpiren"));
				if(liucheng!=null){
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liucheng.getStr("shenpibumen"));
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
					}
				}
			}*/
		}
		return page;
	}
	
	
	@Before(AutoPageInterceptor.class)
	public Page<Record> findXzba(HashMap<String, Object> param) throws Exception {
		Page<Record> page=AppDao.findXzba(param);
		int index=1;
		for(Record record:page.getList()){
			record.set("xuhao", index);
			index++;
			//获取流程名称 与库点名称
			 Record re=Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? order by jiedian desc",record.getStr("liuchenghao"));
			 record.set("liuchengname", re.get("name"));
			 Record re1=Db.findFirst("select * from tz_kudian where qyzzjgdm=? and kdbm=?",record.getStr("qyzzjgdm"),record.getStr("kudian"));
			 record.set("kdmc", re1.get("kdmc"));
			 record.set("jd",re.get("jiedian"));
			 
			if(param.get("shenpiren")!=null){
				Record liucheng=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? and shenpiren=?",record.getStr("liuchenghao"),param.get("shenpiren"));
				if(liucheng!=null){
					
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liucheng.getStr("shenpibumen"));
					
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
						record.set("jiedian", liucheng.getInt("jiedian"));
					}
				}
			}else{
				Record liu=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=?",record.getStr("liuchenghao"));
				if(liu!=null){
					
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liu.getStr("shenpibumen"));
					
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
					}
				}
				
			}
		}
		return page;
	}

	public Ret updateQyba(HashMap<String, Object> param) {
		
		return new Ret().create("ret", AppDao.updateQyba(param));
	}
	

	/**
	 * 保存驳回理由
	 * @throws Exception
	 */
	public Ret saveBohui(HashMap<String, Object> param) {
		Ret ret=new Ret();
		int flag=Db.update("update oa_qiyebeian set status=? ,shenpiren=?,liyou=? where id=?",param.get("status")+"0",param.get("shenpiren"),param.get("liyou"),param.get("id"));
		if(flag>0){
			ret.put("ret", true);
		}else{
			ret.put("ret", false);
		}
		return ret;
	}

	

	public Ret saveXzBohui(HashMap<String, Object> param) {
		Ret ret=new Ret();
		int flag=Db.update("update oa_xunzhengbeian set status=? ,shenpiren=?,liyou=? where id=?",param.get("status")+"0",param.get("shenpiren"),param.get("liyou"),param.get("id"));
		if(flag>0){
			ret.put("ret", true);
		}else{
			ret.put("ret", false);
		}
		return ret;
	}

	public Ret updateXzbaTg(HashMap<String, Object> param) {
		Ret ret=new Ret();
		int flag=Db.update("update oa_xunzhengbeian set status=? ,shenpiren=? where id=?",param.get("status"),param.get("shenpiren"),param.get("id"));
		if(flag>0){
			ret.put("ret", true);
		}else{
			ret.put("ret", false);
		}
		return ret;
	}

	
	
	public Page<Record> findYjba(HashMap<String, Object> param) throws Exception {
		Page<Record> page=AppDao.findYjba(param);
		int index=1;
		for(Record record:page.getList()){
			record.set("xuhao", index);
			index++;
			if(param.get("shenpiren")!=null){
				
				Record liucheng=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? and shenpiren=?",record.getStr("liuchenghao"),param.get("shenpiren"));
				if(liucheng!=null){
					
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liucheng.getStr("shenpibumen"));
					
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
						record.set("jiedian", liucheng.getInt("jiedian"));
					}
				}else{
					Record liu=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=?",record.getStr("liuchenghao"));
					if(liu!=null){
						
						Record dep= Db.findFirst("select * from fw_dep  where id=?",liu.getStr("shenpibumen"));
						
						if(dep!=null){
							record.set("depname", dep.getStr("name"));	
						}
					}
				}
				/*Record liucheng=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? and shenpiren=?",record.getStr("liuchenghao"),UserKit.currentUserInfo().getUser().getString("id"));
				if(liucheng!=null){
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liucheng.getStr("shenpibumen"));
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
					}
					record.set("jiedian", liucheng.getInt("jiedian"));
				}*/
			}
			
		}
		return page;
	}

	public Ret updateYjbaTg(HashMap<String, Object> param) {
		Ret ret=new Ret();
		int flag=Db.update("update oa_yaojibeian set status=? ,shenpiren=? where id=?",param.get("status"),param.get("shenpiren"),param.get("id"));
		if(flag>0){
			ret.put("ret", true);
		}else{
			ret.put("ret", false);
		}
		return ret;
	}

	public Ret saveYjBohui(HashMap<String, Object> param) {
		Ret ret=new Ret();
		int flag=Db.update("update oa_yaojibeian set status=? ,shenpiren=? where id=?",param.get("status")+"0",param.get("shenpiren"),param.get("id"));
		if(flag>0){
			ret.put("ret", true);
		}else{
			ret.put("ret", false);
		}
		return ret;
	}
	/**
	 * 获取企业备案信息
	 * @author yzz
	 * @throws Exception 
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> findQiyebeian(HashMap<String, Object> param) throws Exception {
		Page<Record> page=AppDao.findQiyebeian(param);
		for(Record record:page.getList()){
			if(record.getStr("shenpiren")!=null){
				Record liucheng=  Db.findFirst("select * from oa_shenpiliucheng where liuchenghao=? and shenpiren=?",record.getStr("liuchengid"),record.getStr("shenpiren"));
				if(liucheng!=null){
					record.set("jiedian", liucheng.getInt("jiedian"));
					Record dep= Db.findFirst("select * from fw_dep  where id=?",liucheng.getStr("shenpibumen"));
					if(dep!=null){
						record.set("depname", dep.getStr("name"));	
					}
				}
			}
		}
		return page;
	}
	
	@Before(AutoPageInterceptor.class)
	public Page<Record> queryLsj(HashMap<String, Object> param) throws Exception {
		// TODO Auto-generated method stub
		return AppDao.queryLsj(param);
	}

	/**
	 * 查找政务办公 熏蒸备案作业人员信息
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> findzuoyerenyuan(HashMap<String, Object> param) throws Exception {
		Page<Record> page=AppDao.findzuoyerenyuan(param);
		int index=0;
		for (Record record : page.getList()) {
			index++;
			record.set("xuhao", index);
		}
		return page;
	}

	/**
	 * 查找熏蒸对象信息
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> findxunzhendx(HashMap<String, Object> param) throws Exception {
		Page<Record> page=AppDao.findxunzhendx(param);
		int index=0;
		for (Record record : page.getList()) {
			index++;
			record.set("xuhao", index);
		}
		return page;
	}
	
	/**
	 * 查找熏蒸药剂信息
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> findxunzhenyj(HashMap<String, Object> param) throws Exception {
		Page<Record> page=AppDao.findxunzhenyj(param);
		int index=0;
		for (Record record : page.getList()) {
			index++;
			record.set("xuhao", index);
		}
		return page;
	}
	/**
	 * 药剂出库 药剂库存信息
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@Before(AutoPageInterceptor.class)
	public Page<Record> findYjckxx(HashMap<String, Object> param) throws Exception {
		Page<Record> userPageRecord=AppDao.findYjckxx(param);
		int index=1;
	    int index1=0;
		for(Record userRecord:userPageRecord.getList()){
			int page=userPageRecord.getPageNumber();
			index1=(page-1)*10+index;
			userRecord.set("xuhao",index1);
			index++;
		}
		return userPageRecord;
	}
	
}
